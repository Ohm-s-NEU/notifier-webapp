node{
    def app

    stage('Clone repository'){
        checkout scm
    }

    stage('Build package') {
   
        sh ''' 
            mvn clean
		    mvn package 
		'''
    }

    script{
        GIT_COMMIT_HASH = sh (script: "git log -n 1 --pretty=format:'%H'", returnStdout: true)
        echo "${GIT_COMMIT_HASH}"
    }

    stage('Build Image'){
        app = docker.build("${DOCKER_IMAGE_NOTIFIER}")
    }

    stage('Push Image'){

        docker.withRegistry('https://registry.hub.docker.com','docker-hub'){
            app.push("${GIT_COMMIT_HASH}")
            app.push("latest")
        }

        echo "Trying to push to docker hub"

    }

    stage('notifier deployment') {
        script {
            sh"""
            export aws_access_key_id=${aws_access_key_id}
            export aws_secret_key=${aws_secret_key}
            export KOPS_STATE_STORE=${state_store}
            export aws_region=${aws_region}
            """
        }
    }

    stage('Latest release from Helm Chart Repo'){
        LINK = sh (script: "curl --location --request GET 'https://api.github.com/repos/Ohm-s-NEU/notifier-webapp-helm-chart/releases/latest' --header 'Authorization: token ${gh_token_sp}' | jq -r '.assets[0].url'",returnStdout:true)
        echo "${LINK}"
        script {
            sh"""
            curl --header 'Authorization: token ${gh_token_sp}' --header 'Accept: application/octet-stream' --output helm.tar.gz --location --request GET ${LINK}
            tar -xvzf helm.tar.gz
            ls -lrt
            """
        }
    }

    stage('Install chart') {
        script {
            sh"""
            helm upgrade notifier ./notifierhelm --install --wait --debug --kubeconfig="/home/ubuntu/config" --set notifier.secret.userName=${notifier_username} --set notifier.secret.password=${notifier_password} --set webapp.secret.webapp_userName=${webapp_username} --set webapp.secret.password=${webapp_password} --set aws.aws_access_key_id=${aws_access_key_id}  --set aws.aws_secret_key=${aws_secret_key} --set aws.secret.aws_region=${aws_region} --set webapp.database.dbname=${webapp_db} --set webapp.database.host=${webapp_host} --set notifier.database.dbname=${notifier_db} --set notifier.database.host=${notifier_host} --set imagePullSecrets=${imagePullSecrets} --set image.repository=${image_notifier} 
            """
        }
    }

}